\name{other.oneside.pvalues}
\alias{other.oneside.pvalues}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
Optional function for non-NOISeq method
}
\description{
Optional function for non-NOISeq method users. P-values or probability in one-sided test in positive and negative differentiation is integrated and converted as a input matrix for \code{Fisher.test} or \code{Stouffer.test}. Weight in each study can also be introduced.
}
\usage{
other.oneside.pvalues(Upper, Lower, weight = NULL)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{Upper}{
A matrix which means p-values or probability in one-sided test (positive differentiation). Its rows mean "gene" and its columns mean "study"  that test was conducted.
}
  \item{Lower}{
A matrix which means p-values or probability in one-sided test (negative differentiation). Its rows mean "gene" and its columns mean "study"  that test was conducted.
}
  \item{weight}{
A vector which means weight in each study. Its length must be equal to the number of column in Upper and Lower.
}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
Koki Tsuyuzaki
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
## Assume these are one-sided p-value generated by non-NOISeq method (e.g., cufflinks)
upper <- matrix(runif(300), ncol=3, nrow=100)
lower <- 1 - upper
weight <- c(3,6,8)

# other.oneside.pvalues function return a matrix which can input Fisher.test or Stouffer.test
result <- other.oneside.pvalues(upper, lower, weight)

# Fisher's method (without weighting)
F <- Fisher.test(result)
str(F)
F

# Stouffer's method (with weighting by sample-size)
S <- Stouffer.test(result)
str(S)
S
